security:

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        our_db_provider:
            entity:
                class: App\Entity\User
                property: username
        in_memory:
            memory:
                users:
#                    pavel:
#                        password: pavel
#                        roles: ROLE_USER
                    admin:
                        password: admin
                        roles: 'ROLE_ADMIN'

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: ~
            http_basic: ~
            provider: our_db_provider
            form_login:
                login_path: /login
                check_path: /login
#            secured_area:
            logout:
                path: /logout
                target: /
                invalidate_session: true
            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 3600
                path:     /
        secured_area:
            pattern: ^/admin
            simple_form:
                authenticator: App\Security\Authenticator
                check_path: login_check
                login_path: login_path


            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

#    encoders:
#        Symfony\Component\Security\Core\User\User: plaintext
    encoders:
#        Symfony\Component\Security\Core\User\User: plaintext
        App\Entity\User:
            algorithm: bcrypt

#logout:
#    path: /logout
#    target: /
#    invalidate_session: true